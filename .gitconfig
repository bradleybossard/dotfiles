[user]
  name = Bradley Bossard
  email = bradleybossard@gmail.com
[includeIf "gitdir:~/work/"]
  # create the following file and override the [user] section
  path = ~/work/.gitconfig
[color]
  ui = true
[diff]
  tool = vimdiff
[merge]
  tool = /Users/bradleybossard/scripts/diffwrap.sh
[push]
  default = tracking
[pull]
  rebase = true
[branch]
  autosetuprebase = always
[core]
  autocrlf = input
  editor = vim
  excludesfile = ~/.gitignore
  pager = less -F -X
[alias]
  # Find the name of the primary branch, either "main" or "master".
  primary = "!f() { \
    git branch -a | \
    sed -n -E -e '/remotes.origin.ma(in|ster)$/s@remotes/origin/@@p'; \
  }; f"
  ac = commit -a --message
  bdn = !git diff --name-only $(git primary)
  br = branch
  ci = commit
  co = checkout
  cob = checkout -b
  col = checkout @{-1}
  com = !git checkout $(git primary)
  diffc = diff --cached
  edit = !vim $(git status -s | cut -c4-)
  editbranch = !vim $(git diff --name-only  $(git primary))
  hist = log --pretty=format:'%h %ad | %s%d [%an]' --graph --date=short
  incoming = !git log origin/$(git primary) ^$(git primary)
  last = log -1 HEAD
  logpretty = log -10 --pretty=oneline
  ll = log --oneline
  lol = log --oneline --graph --decorate
  outgoing = !git log $(git primary) ^origin/$(git primary)
  pom = !git push --set-upstream origin $(git primary)
  pob = !git push --set-upstream origin $(git branch | grep \\* | cut -d ' ' -f2)
  pullsubs = !git submodule foreach git pull origin $(git primary)
  rem = !git rebase $(git primary)
  remi = !git rebase -i $(git primary)
  spa = !"git stash; git pull; git stash apply"
  spp = !"git stash; git pull; git stash pop"
  st = status
  sts = status --short --branch
  t = tag -n3
  unstage = reset HEAD --
[difftool "sourcetree"]
  cmd = opendiff \"$LOCAL\" \"$REMOTE\"
  path =
[mergetool "sourcetree"]
  cmd = /Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
  trustExitCode = true
[difftool]
  prompt = false
[hub]
  protocol = https
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[credential]
	helper = store
[init]
	defaultBranch = master
